{"hash":"df4ff6896dc1b5b6fab4533702659cb9434ba6a6","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge, combineLatest } from 'rxjs';\nimport { delay, tap, throttleTime, pluck, filter, map, takeUntil } from 'rxjs/operators';\nimport { isPlatformBrowser } from '@angular/common';\n\nconst path = () => {\n    if (!('path' in Event.prototype)) {\n        Object.defineProperty(Event.prototype, 'path', {\n            get: function () {\n                let path = [];\n                let currentElem = this.target;\n                while (currentElem) {\n                    path.push(currentElem);\n                    currentElem = currentElem.parentElement;\n                }\n                if (path.indexOf(window) === -1 && path.indexOf(document) === -1) {\n                    path.push(document);\n                }\n                if (path.indexOf(window) === -1) {\n                    path.push(window);\n                }\n                return path;\n            }\n        });\n    }\n};\n\nclass BrowserWindowRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    get nativeWindow() {\n        if (isPlatformBrowser(this.platformId)) {\n            return this.windowRef();\n        }\n        return false;\n    }\n    windowRef() {\n        // return the global native browser window object\n        return window;\n    }\n}\nBrowserWindowRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserWindowRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass NgxCursorComponent {\n    constructor(wr) {\n        this.wr = wr;\n        this.border = 'none';\n        this.chekNParents = 5;\n        this.color = '#000';\n        this.cursor = true;\n        this.delay = 50;\n        this.opacity = 0.4;\n        this.selectors = [];\n        this.size = '30px';\n        this.txtcolor = '#FFF';\n        this.words = [];\n        this.zindex = 999;\n        this.componentDestroy$ = new Subject();\n        this.cursorType = [\n            'cursor-active',\n            'cursor-color',\n            'cursor-opacity',\n            'cursor-border',\n            'cursor-size',\n            'href',\n            'routerlink'\n        ];\n    }\n    ngOnChanges() {\n        this.setStyles();\n    }\n    ngAfterViewInit() {\n        if (this.wr.nativeWindow) {\n            this.init();\n            const mousemove$ = fromEvent(this.wr.nativeWindow, 'mousemove');\n            const click$ = fromEvent(this.wr.nativeWindow, 'click');\n            const deplaceCursor$ = merge(mousemove$, click$).pipe(delay(this.delay), tap((e) => {\n                this.deplaceCursor(e.clientX, e.clientY);\n            }));\n            const getElementsFamilly$ = merge(mousemove$, click$).pipe(throttleTime(100), pluck('path'), filter((familly) => familly && familly.length > 0), map((familly) => familly.slice(0, this.chekNParents)));\n            const getElementsAttrs$ = getElementsFamilly$.pipe(map((data) => data.map((item) => {\n                if (item.attributes) {\n                    return Object.values(item.attributes).filter((attr) => {\n                        const isStandard = this.cursorType.indexOf(attr.name) !== -1;\n                        const isCustom = this.customType().indexOf(attr.name) !== -1;\n                        return isStandard || isCustom;\n                    });\n                }\n            })));\n            const applyStylesFromAttr$ = getElementsAttrs$.pipe(tap((_) => this.removeClass()), map((data) => data.flat()), filter((arrayAttr) => arrayAttr.length > 0), tap((arrayAttr) => {\n                arrayAttr.map((item) => {\n                    if (item) {\n                        this.HoverInElement(item, this.customType().indexOf(item.name));\n                    }\n                });\n            }));\n            this.merge$ = combineLatest(deplaceCursor$, getElementsAttrs$, applyStylesFromAttr$)\n                .pipe(takeUntil(this.componentDestroy$))\n                .subscribe();\n        }\n    }\n    init() {\n        path();\n        this.firstColor = this.color;\n        this.firstSize = this.size;\n        this.firstBorder = this.border;\n        this.firstOpacity = this.opacity;\n    }\n    HoverInElement(item, i) {\n        if (item.name === 'href' ||\n            item.name === 'routerlink' ||\n            item.name === 'cursor-active') {\n            this.addClass('active');\n        }\n        else if (item.name === 'cursor-color') {\n            this.color = item.value;\n        }\n        else if (item.name === 'cursor-border') {\n            this.border = item.value;\n        }\n        else if (item.name === 'cursor-opacity') {\n            this.opacity = item.value;\n        }\n        else if (item.name === 'cursor-size') {\n            this.size = item.value;\n        }\n        else {\n            this.opacity = 1;\n            this.addClass('active');\n            this.customTxtStyles(this.words[i]);\n        }\n        this.setStyles();\n    }\n    addClass(className) {\n        this.ngxCursor.nativeElement.classList.add(className);\n    }\n    removeClass() {\n        this.color = this.firstColor;\n        this.border = this.firstBorder;\n        this.size = this.firstSize;\n        this.opacity = this.firstOpacity;\n        this.ngxCursor.nativeElement.classList.remove('active');\n        this.ngxCursorEl.nativeElement.innerHTML = '';\n        this.setStyles();\n    }\n    deplaceCursor(x, y) {\n        this.ngxCursor.nativeElement.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n    }\n    setStyles() {\n        if (this.wr.nativeWindow) {\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-color', this.color);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-border', this.border);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-opacity', `${this.opacity}`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-size', this.size);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-zindex', `${this.zindex}`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-txtcolor', `${this.txtcolor}`);\n        }\n        this.isCursor(this.cursor);\n    }\n    customType() {\n        return this.selectors.map((selector) => `cursor-${selector}`);\n    }\n    isCursor(iscursor) {\n        if (this.wr.nativeWindow) {\n            if (iscursor) {\n                this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'auto');\n            }\n            else {\n                this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'none');\n            }\n        }\n    }\n    customTxtStyles(word) {\n        if (this.wr.nativeWindow) {\n            if (word) {\n                this.ngxCursorEl.nativeElement.innerHTML = word;\n            }\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-opacity', `0.9`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'none');\n        }\n    }\n    ngOnDestroy() {\n        this.componentDestroy$.next(false);\n        this.componentDestroy$.complete();\n        this.isCursor(true);\n    }\n}\nNgxCursorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorComponent, deps: [{ token: BrowserWindowRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxCursorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.9\", type: NgxCursorComponent, selector: \"ngx-cursor\", inputs: { border: \"border\", chekNParents: \"chekNParents\", color: \"color\", cursor: \"cursor\", delay: \"delay\", opacity: \"opacity\", selectors: \"selectors\", size: \"size\", txtcolor: \"txtcolor\", words: \"words\", zindex: \"zindex\" }, viewQueries: [{ propertyName: \"ngxCursor\", first: true, predicate: [\"ngxCursor\"], descendants: true }, { propertyName: \"ngxCursorEl\", first: true, predicate: [\"ngxCursorEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `, isInline: true, styles: [\"body{--ngx-cursor: auto;--ngx-cursor-color: #000;--ngx-cursor-opacity: .5;--ngx-cursor-size: 30;--ngx-cursor-zindex: 999;--ngx-cursor-txtcolor: #fff;--ngx-cursor-border: none}::ng-deep *{cursor:var(--ngx-cursor)}#ngx-cursor{left:0;pointer-events:none;position:fixed;top:0;z-index:var(--ngx-cursor-zindex)}#ngx-cursor span{align-items:center;background-color:var(--ngx-cursor-color);border-radius:100%;border:var(--ngx-cursor-border);color:var(--ngx-cursor-txtcolor);display:flex;font-size:8px;font-weight:700;height:var(--ngx-cursor-size);justify-content:center;left:calc(var(--ngx-cursor-size) / -2);opacity:var(--ngx-cursor-opacity);position:absolute;text-align:center;top:calc(var(--ngx-cursor-size) / -2);transition:all .25s cubic-bezier(.72,.19,.28,.94);width:var(--ngx-cursor-size)}#ngx-cursor.active span{transform:scale(2)}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-cursor', template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `, styles: [\"body{--ngx-cursor: auto;--ngx-cursor-color: #000;--ngx-cursor-opacity: .5;--ngx-cursor-size: 30;--ngx-cursor-zindex: 999;--ngx-cursor-txtcolor: #fff;--ngx-cursor-border: none}::ng-deep *{cursor:var(--ngx-cursor)}#ngx-cursor{left:0;pointer-events:none;position:fixed;top:0;z-index:var(--ngx-cursor-zindex)}#ngx-cursor span{align-items:center;background-color:var(--ngx-cursor-color);border-radius:100%;border:var(--ngx-cursor-border);color:var(--ngx-cursor-txtcolor);display:flex;font-size:8px;font-weight:700;height:var(--ngx-cursor-size);justify-content:center;left:calc(var(--ngx-cursor-size) / -2);opacity:var(--ngx-cursor-opacity);position:absolute;text-align:center;top:calc(var(--ngx-cursor-size) / -2);transition:all .25s cubic-bezier(.72,.19,.28,.94);width:var(--ngx-cursor-size)}#ngx-cursor.active span{transform:scale(2)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: BrowserWindowRef }]; }, propDecorators: { border: [{\n                type: Input\n            }], chekNParents: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], cursor: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], selectors: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], txtcolor: [{\n                type: Input\n            }], words: [{\n                type: Input\n            }], zindex: [{\n                type: Input\n            }], ngxCursor: [{\n                type: ViewChild,\n                args: ['ngxCursor']\n            }], ngxCursorEl: [{\n                type: ViewChild,\n                args: ['ngxCursorEl']\n            }] } });\n\nclass NgxCursorModule {\n}\nNgxCursorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxCursorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, declarations: [NgxCursorComponent], exports: [NgxCursorComponent] });\nNgxCursorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxCursorComponent],\n                    imports: [],\n                    exports: [NgxCursorComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-cursor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxCursorComponent, NgxCursorModule };\n//# sourceMappingURL=ngx-cursor.mjs.map\n","map":{"version":3,"file":"ngx-cursor.mjs","sources":["../../../projects/ngx-cursor/src/lib/polyfills/path.ts","../../../projects/ngx-cursor/src/lib/services/windowref.service.ts","../../../projects/ngx-cursor/src/lib/ngx-cursor/ngx-cursor.component.ts","../../../projects/ngx-cursor/src/lib/ngx-cursor.module.ts","../../../projects/ngx-cursor/src/public_api.ts","../../../projects/ngx-cursor/src/ngx-cursor.ts"],"sourcesContent":["export const path = () => {\n  if (!('path' in Event.prototype)) {\n    Object.defineProperty(Event.prototype, 'path', {\n      get: function() {\n        let path = [];\n        let currentElem = this.target;\n        while (currentElem) {\n          path.push(currentElem);\n          currentElem = currentElem.parentElement;\n        }\n        if (path.indexOf(window) === -1 && path.indexOf(document) === -1) {\n          path.push(document);\n        }\n        if (path.indexOf(window) === -1) {\n          path.push(window);\n        }\n        return path;\n      }\n    });\n  }\n};\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({ providedIn: 'root' })\nexport class BrowserWindowRef {\n  constructor(@Inject(PLATFORM_ID) private platformId) {}\n\n  get nativeWindow(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      return this.windowRef();\n    }\n    return false;\n  }\n\n  private windowRef(): Window {\n    // return the global native browser window object\n    return window;\n  }\n}\n","import {\n  Component,\n  AfterViewInit,\n  Input,\n  ViewChild,\n  ElementRef,\n  OnChanges,\n  OnDestroy\n} from '@angular/core';\nimport { fromEvent, Subject, Subscription, combineLatest, merge } from 'rxjs';\nimport {\n  tap,\n  pluck,\n  map,\n  delay,\n  filter,\n  takeUntil,\n  throttleTime\n} from 'rxjs/operators';\nimport { BrowserWindowRef } from '../services/windowref.service';\nimport * as polyfills from '../polyfills/path';\n\n@Component({\n  selector: 'ngx-cursor',\n  template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `,\n  styleUrls: ['./ngx-cursor.component.scss']\n})\nexport class NgxCursorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() border = 'none';\n  @Input() chekNParents = 5;\n  @Input() color = '#000';\n  @Input() cursor = true;\n  @Input() delay = 50;\n  @Input() opacity = 0.4;\n  @Input() selectors: string[] = [];\n  @Input() size = '30px';\n  @Input() txtcolor = '#FFF';\n  @Input() words: string[] = [];\n  @Input() zindex = 999;\n\n  @ViewChild('ngxCursor') ngxCursor: ElementRef;\n  @ViewChild('ngxCursorEl') ngxCursorEl: ElementRef;\n\n  private componentDestroy$ = new Subject<boolean>();\n  public merge$: Subscription;\n\n  public firstColor: string;\n  public firstSize: string;\n  public firstOpacity: number;\n  public firstBorder: string;\n  public cursorType = [\n    'cursor-active',\n    'cursor-color',\n    'cursor-opacity',\n    'cursor-border',\n    'cursor-size',\n    'href',\n    'routerlink'\n  ];\n\n  constructor(private wr: BrowserWindowRef) {}\n\n  ngOnChanges() {\n    this.setStyles();\n  }\n\n  ngAfterViewInit() {\n    if (this.wr.nativeWindow) {\n      this.init();\n\n      const mousemove$ = fromEvent(this.wr.nativeWindow, 'mousemove');\n      const click$ = fromEvent(this.wr.nativeWindow, 'click');\n\n      const deplaceCursor$ = merge(mousemove$, click$).pipe(\n        delay(this.delay),\n        tap((e: MouseEvent) => {\n          this.deplaceCursor(e.clientX, e.clientY);\n        })\n      );\n\n      const getElementsFamilly$ = merge(mousemove$, click$).pipe(\n        throttleTime(100),\n        pluck('path'),\n        filter((familly: HTMLElement[]) => familly && familly.length > 0),\n        map((familly: HTMLElement[]) => familly.slice(0, this.chekNParents))\n      );\n\n      const getElementsAttrs$ = getElementsFamilly$.pipe(\n        map((data: HTMLElement[]) =>\n          data.map((item: HTMLElement) => {\n            if (item.attributes) {\n              return Object.values(item.attributes).filter((attr: any) => {\n                const isStandard = this.cursorType.indexOf(attr.name) !== -1;\n                const isCustom = this.customType().indexOf(attr.name) !== -1;\n                return isStandard || isCustom;\n              });\n            }\n          })\n        )\n      );\n\n      const applyStylesFromAttr$ = getElementsAttrs$.pipe(\n        tap((_) => this.removeClass()),\n        map((data: any) => data.flat()),\n        filter((arrayAttr: any[]) => arrayAttr.length > 0),\n        tap((arrayAttr: any[]) => {\n          arrayAttr.map((item) => {\n            if (item) {\n              this.HoverInElement(item, this.customType().indexOf(item.name));\n            }\n          });\n        })\n      );\n\n      this.merge$ = combineLatest(\n        deplaceCursor$,\n        getElementsAttrs$,\n        applyStylesFromAttr$\n      )\n        .pipe(takeUntil(this.componentDestroy$))\n        .subscribe();\n    }\n  }\n\n  private init(): void {\n    polyfills.path();\n    this.firstColor = this.color;\n    this.firstSize = this.size;\n    this.firstBorder = this.border;\n    this.firstOpacity = this.opacity;\n  }\n\n  private HoverInElement(item: any, i: number): void {\n    if (\n      item.name === 'href' ||\n      item.name === 'routerlink' ||\n      item.name === 'cursor-active'\n    ) {\n      this.addClass('active');\n    } else if (item.name === 'cursor-color') {\n      this.color = item.value;\n    } else if (item.name === 'cursor-border') {\n      this.border = item.value;\n    } else if (item.name === 'cursor-opacity') {\n      this.opacity = item.value;\n    } else if (item.name === 'cursor-size') {\n      this.size = item.value;\n    } else {\n      this.opacity = 1;\n      this.addClass('active');\n      this.customTxtStyles(this.words[i]);\n    }\n\n    this.setStyles();\n  }\n\n  private addClass(className: string): void {\n    this.ngxCursor.nativeElement.classList.add(className);\n  }\n\n  private removeClass(): void {\n    this.color = this.firstColor;\n    this.border = this.firstBorder;\n    this.size = this.firstSize;\n    this.opacity = this.firstOpacity;\n    this.ngxCursor.nativeElement.classList.remove('active');\n    this.ngxCursorEl.nativeElement.innerHTML = '';\n    this.setStyles();\n  }\n\n  private deplaceCursor(x: number, y: number): void {\n    this.ngxCursor.nativeElement.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n  }\n\n  private setStyles(): void {\n    if (this.wr.nativeWindow) {\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-color',\n        this.color\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-border',\n        this.border\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-opacity',\n        `${this.opacity}`\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-size',\n        this.size\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-zindex',\n        `${this.zindex}`\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-txtcolor',\n        `${this.txtcolor}`\n      );\n    }\n    this.isCursor(this.cursor);\n  }\n\n  private customType(): string[] {\n    return this.selectors.map((selector) => `cursor-${selector}`);\n  }\n\n  private isCursor(iscursor: boolean): void {\n    if (this.wr.nativeWindow) {\n      if (iscursor) {\n        this.wr.nativeWindow.document.body.style.setProperty(\n          '--ngx-cursor',\n          'auto'\n        );\n      } else {\n        this.wr.nativeWindow.document.body.style.setProperty(\n          '--ngx-cursor',\n          'none'\n        );\n      }\n    }\n  }\n\n  private customTxtStyles(word: string): void {\n    if (this.wr.nativeWindow) {\n      if (word) {\n        this.ngxCursorEl.nativeElement.innerHTML = word;\n      }\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-opacity',\n        `0.9`\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor',\n        'none'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.componentDestroy$.next(false);\n    this.componentDestroy$.complete();\n    this.isCursor(true);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCursorComponent } from './ngx-cursor/ngx-cursor.component';\n\n@NgModule({\n  declarations: [NgxCursorComponent],\n  imports: [],\n  exports: [NgxCursorComponent]\n})\nexport class NgxCursorModule {}\n","/*\n * Public API Surface of ngx-cursor\n */\n\nexport * from './lib/ngx-cursor.module';\nexport * from './lib/ngx-cursor/ngx-cursor.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["polyfills.path","i1.BrowserWindowRef"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge, combineLatest } from 'rxjs';\nimport { delay, tap, throttleTime, pluck, filter, map, takeUntil } from 'rxjs/operators';\nimport { isPlatformBrowser } from '@angular/common';\n\nconst path = () => {\n    if (!('path' in Event.prototype)) {\n        Object.defineProperty(Event.prototype, 'path', {\n            get: function () {\n                let path = [];\n                let currentElem = this.target;\n                while (currentElem) {\n                    path.push(currentElem);\n                    currentElem = currentElem.parentElement;\n                }\n                if (path.indexOf(window) === -1 && path.indexOf(document) === -1) {\n                    path.push(document);\n                }\n                if (path.indexOf(window) === -1) {\n                    path.push(window);\n                }\n                return path;\n            }\n        });\n    }\n};\n\nclass BrowserWindowRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    get nativeWindow() {\n        if (isPlatformBrowser(this.platformId)) {\n            return this.windowRef();\n        }\n        return false;\n    }\n    windowRef() {\n        // return the global native browser window object\n        return window;\n    }\n}\nBrowserWindowRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserWindowRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    } });\n\nclass NgxCursorComponent {\n    constructor(wr) {\n        this.wr = wr;\n        this.border = 'none';\n        this.chekNParents = 5;\n        this.color = '#000';\n        this.cursor = true;\n        this.delay = 50;\n        this.opacity = 0.4;\n        this.selectors = [];\n        this.size = '30px';\n        this.txtcolor = '#FFF';\n        this.words = [];\n        this.zindex = 999;\n        this.componentDestroy$ = new Subject();\n        this.cursorType = [\n            'cursor-active',\n            'cursor-color',\n            'cursor-opacity',\n            'cursor-border',\n            'cursor-size',\n            'href',\n            'routerlink'\n        ];\n    }\n    ngOnChanges() {\n        this.setStyles();\n    }\n    ngAfterViewInit() {\n        if (this.wr.nativeWindow) {\n            this.init();\n            const mousemove$ = fromEvent(this.wr.nativeWindow, 'mousemove');\n            const click$ = fromEvent(this.wr.nativeWindow, 'click');\n            const deplaceCursor$ = merge(mousemove$, click$).pipe(delay(this.delay), tap((e) => {\n                this.deplaceCursor(e.clientX, e.clientY);\n            }));\n            const getElementsFamilly$ = merge(mousemove$, click$).pipe(throttleTime(100), pluck('path'), filter((familly) => familly && familly.length > 0), map((familly) => familly.slice(0, this.chekNParents)));\n            const getElementsAttrs$ = getElementsFamilly$.pipe(map((data) => data.map((item) => {\n                if (item.attributes) {\n                    return Object.values(item.attributes).filter((attr) => {\n                        const isStandard = this.cursorType.indexOf(attr.name) !== -1;\n                        const isCustom = this.customType().indexOf(attr.name) !== -1;\n                        return isStandard || isCustom;\n                    });\n                }\n            })));\n            const applyStylesFromAttr$ = getElementsAttrs$.pipe(tap((_) => this.removeClass()), map((data) => data.flat()), filter((arrayAttr) => arrayAttr.length > 0), tap((arrayAttr) => {\n                arrayAttr.map((item) => {\n                    if (item) {\n                        this.HoverInElement(item, this.customType().indexOf(item.name));\n                    }\n                });\n            }));\n            this.merge$ = combineLatest(deplaceCursor$, getElementsAttrs$, applyStylesFromAttr$)\n                .pipe(takeUntil(this.componentDestroy$))\n                .subscribe();\n        }\n    }\n    init() {\n        path();\n        this.firstColor = this.color;\n        this.firstSize = this.size;\n        this.firstBorder = this.border;\n        this.firstOpacity = this.opacity;\n    }\n    HoverInElement(item, i) {\n        if (item.name === 'href' ||\n            item.name === 'routerlink' ||\n            item.name === 'cursor-active') {\n            this.addClass('active');\n        }\n        else if (item.name === 'cursor-color') {\n            this.color = item.value;\n        }\n        else if (item.name === 'cursor-border') {\n            this.border = item.value;\n        }\n        else if (item.name === 'cursor-opacity') {\n            this.opacity = item.value;\n        }\n        else if (item.name === 'cursor-size') {\n            this.size = item.value;\n        }\n        else {\n            this.opacity = 1;\n            this.addClass('active');\n            this.customTxtStyles(this.words[i]);\n        }\n        this.setStyles();\n    }\n    addClass(className) {\n        this.ngxCursor.nativeElement.classList.add(className);\n    }\n    removeClass() {\n        this.color = this.firstColor;\n        this.border = this.firstBorder;\n        this.size = this.firstSize;\n        this.opacity = this.firstOpacity;\n        this.ngxCursor.nativeElement.classList.remove('active');\n        this.ngxCursorEl.nativeElement.innerHTML = '';\n        this.setStyles();\n    }\n    deplaceCursor(x, y) {\n        this.ngxCursor.nativeElement.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n    }\n    setStyles() {\n        if (this.wr.nativeWindow) {\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-color', this.color);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-border', this.border);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-opacity', `${this.opacity}`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-size', this.size);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-zindex', `${this.zindex}`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-txtcolor', `${this.txtcolor}`);\n        }\n        this.isCursor(this.cursor);\n    }\n    customType() {\n        return this.selectors.map((selector) => `cursor-${selector}`);\n    }\n    isCursor(iscursor) {\n        if (this.wr.nativeWindow) {\n            if (iscursor) {\n                this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'auto');\n            }\n            else {\n                this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'none');\n            }\n        }\n    }\n    customTxtStyles(word) {\n        if (this.wr.nativeWindow) {\n            if (word) {\n                this.ngxCursorEl.nativeElement.innerHTML = word;\n            }\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-opacity', `0.9`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'none');\n        }\n    }\n    ngOnDestroy() {\n        this.componentDestroy$.next(false);\n        this.componentDestroy$.complete();\n        this.isCursor(true);\n    }\n}\nNgxCursorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorComponent, deps: [{ token: BrowserWindowRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxCursorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.9\", type: NgxCursorComponent, selector: \"ngx-cursor\", inputs: { border: \"border\", chekNParents: \"chekNParents\", color: \"color\", cursor: \"cursor\", delay: \"delay\", opacity: \"opacity\", selectors: \"selectors\", size: \"size\", txtcolor: \"txtcolor\", words: \"words\", zindex: \"zindex\" }, viewQueries: [{ propertyName: \"ngxCursor\", first: true, predicate: [\"ngxCursor\"], descendants: true }, { propertyName: \"ngxCursorEl\", first: true, predicate: [\"ngxCursorEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `, isInline: true, styles: [\"body{--ngx-cursor: auto;--ngx-cursor-color: #000;--ngx-cursor-opacity: .5;--ngx-cursor-size: 30;--ngx-cursor-zindex: 999;--ngx-cursor-txtcolor: #fff;--ngx-cursor-border: none}::ng-deep *{cursor:var(--ngx-cursor)}#ngx-cursor{left:0;pointer-events:none;position:fixed;top:0;z-index:var(--ngx-cursor-zindex)}#ngx-cursor span{align-items:center;background-color:var(--ngx-cursor-color);border-radius:100%;border:var(--ngx-cursor-border);color:var(--ngx-cursor-txtcolor);display:flex;font-size:8px;font-weight:700;height:var(--ngx-cursor-size);justify-content:center;left:calc(var(--ngx-cursor-size) / -2);opacity:var(--ngx-cursor-opacity);position:absolute;text-align:center;top:calc(var(--ngx-cursor-size) / -2);transition:all .25s cubic-bezier(.72,.19,.28,.94);width:var(--ngx-cursor-size)}#ngx-cursor.active span{transform:scale(2)}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-cursor', template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `, styles: [\"body{--ngx-cursor: auto;--ngx-cursor-color: #000;--ngx-cursor-opacity: .5;--ngx-cursor-size: 30;--ngx-cursor-zindex: 999;--ngx-cursor-txtcolor: #fff;--ngx-cursor-border: none}::ng-deep *{cursor:var(--ngx-cursor)}#ngx-cursor{left:0;pointer-events:none;position:fixed;top:0;z-index:var(--ngx-cursor-zindex)}#ngx-cursor span{align-items:center;background-color:var(--ngx-cursor-color);border-radius:100%;border:var(--ngx-cursor-border);color:var(--ngx-cursor-txtcolor);display:flex;font-size:8px;font-weight:700;height:var(--ngx-cursor-size);justify-content:center;left:calc(var(--ngx-cursor-size) / -2);opacity:var(--ngx-cursor-opacity);position:absolute;text-align:center;top:calc(var(--ngx-cursor-size) / -2);transition:all .25s cubic-bezier(.72,.19,.28,.94);width:var(--ngx-cursor-size)}#ngx-cursor.active span{transform:scale(2)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: BrowserWindowRef }]; }, propDecorators: { border: [{\n                type: Input\n            }], chekNParents: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], cursor: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], selectors: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], txtcolor: [{\n                type: Input\n            }], words: [{\n                type: Input\n            }], zindex: [{\n                type: Input\n            }], ngxCursor: [{\n                type: ViewChild,\n                args: ['ngxCursor']\n            }], ngxCursorEl: [{\n                type: ViewChild,\n                args: ['ngxCursorEl']\n            }] } });\n\nclass NgxCursorModule {\n}\nNgxCursorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxCursorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, declarations: [NgxCursorComponent], exports: [NgxCursorComponent] });\nNgxCursorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxCursorComponent],\n                    imports: [],\n                    exports: [NgxCursorComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-cursor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxCursorComponent, NgxCursorModule };\n//# sourceMappingURL=ngx-cursor.mjs.map\n","map":{"version":3,"file":"ngx-cursor.mjs","sources":["../../../projects/ngx-cursor/src/lib/polyfills/path.ts","../../../projects/ngx-cursor/src/lib/services/windowref.service.ts","../../../projects/ngx-cursor/src/lib/ngx-cursor/ngx-cursor.component.ts","../../../projects/ngx-cursor/src/lib/ngx-cursor.module.ts","../../../projects/ngx-cursor/src/public_api.ts","../../../projects/ngx-cursor/src/ngx-cursor.ts"],"sourcesContent":["export const path = () => {\n  if (!('path' in Event.prototype)) {\n    Object.defineProperty(Event.prototype, 'path', {\n      get: function() {\n        let path = [];\n        let currentElem = this.target;\n        while (currentElem) {\n          path.push(currentElem);\n          currentElem = currentElem.parentElement;\n        }\n        if (path.indexOf(window) === -1 && path.indexOf(document) === -1) {\n          path.push(document);\n        }\n        if (path.indexOf(window) === -1) {\n          path.push(window);\n        }\n        return path;\n      }\n    });\n  }\n};\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({ providedIn: 'root' })\nexport class BrowserWindowRef {\n  constructor(@Inject(PLATFORM_ID) private platformId) {}\n\n  get nativeWindow(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      return this.windowRef();\n    }\n    return false;\n  }\n\n  private windowRef(): Window {\n    // return the global native browser window object\n    return window;\n  }\n}\n","import {\n  Component,\n  AfterViewInit,\n  Input,\n  ViewChild,\n  ElementRef,\n  OnChanges,\n  OnDestroy\n} from '@angular/core';\nimport { fromEvent, Subject, Subscription, combineLatest, merge } from 'rxjs';\nimport {\n  tap,\n  pluck,\n  map,\n  delay,\n  filter,\n  takeUntil,\n  throttleTime\n} from 'rxjs/operators';\nimport { BrowserWindowRef } from '../services/windowref.service';\nimport * as polyfills from '../polyfills/path';\n\n@Component({\n  selector: 'ngx-cursor',\n  template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `,\n  styleUrls: ['./ngx-cursor.component.scss']\n})\nexport class NgxCursorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() border = 'none';\n  @Input() chekNParents = 5;\n  @Input() color = '#000';\n  @Input() cursor = true;\n  @Input() delay = 50;\n  @Input() opacity = 0.4;\n  @Input() selectors: string[] = [];\n  @Input() size = '30px';\n  @Input() txtcolor = '#FFF';\n  @Input() words: string[] = [];\n  @Input() zindex = 999;\n\n  @ViewChild('ngxCursor') ngxCursor: ElementRef;\n  @ViewChild('ngxCursorEl') ngxCursorEl: ElementRef;\n\n  private componentDestroy$ = new Subject<boolean>();\n  public merge$: Subscription;\n\n  public firstColor: string;\n  public firstSize: string;\n  public firstOpacity: number;\n  public firstBorder: string;\n  public cursorType = [\n    'cursor-active',\n    'cursor-color',\n    'cursor-opacity',\n    'cursor-border',\n    'cursor-size',\n    'href',\n    'routerlink'\n  ];\n\n  constructor(private wr: BrowserWindowRef) {}\n\n  ngOnChanges() {\n    this.setStyles();\n  }\n\n  ngAfterViewInit() {\n    if (this.wr.nativeWindow) {\n      this.init();\n\n      const mousemove$ = fromEvent(this.wr.nativeWindow, 'mousemove');\n      const click$ = fromEvent(this.wr.nativeWindow, 'click');\n\n      const deplaceCursor$ = merge(mousemove$, click$).pipe(\n        delay(this.delay),\n        tap((e: MouseEvent) => {\n          this.deplaceCursor(e.clientX, e.clientY);\n        })\n      );\n\n      const getElementsFamilly$ = merge(mousemove$, click$).pipe(\n        throttleTime(100),\n        pluck('path'),\n        filter((familly: HTMLElement[]) => familly && familly.length > 0),\n        map((familly: HTMLElement[]) => familly.slice(0, this.chekNParents))\n      );\n\n      const getElementsAttrs$ = getElementsFamilly$.pipe(\n        map((data: HTMLElement[]) =>\n          data.map((item: HTMLElement) => {\n            if (item.attributes) {\n              return Object.values(item.attributes).filter((attr: any) => {\n                const isStandard = this.cursorType.indexOf(attr.name) !== -1;\n                const isCustom = this.customType().indexOf(attr.name) !== -1;\n                return isStandard || isCustom;\n              });\n            }\n          })\n        )\n      );\n\n      const applyStylesFromAttr$ = getElementsAttrs$.pipe(\n        tap((_) => this.removeClass()),\n        map((data: any) => data.flat()),\n        filter((arrayAttr: any[]) => arrayAttr.length > 0),\n        tap((arrayAttr: any[]) => {\n          arrayAttr.map((item) => {\n            if (item) {\n              this.HoverInElement(item, this.customType().indexOf(item.name));\n            }\n          });\n        })\n      );\n\n      this.merge$ = combineLatest(\n        deplaceCursor$,\n        getElementsAttrs$,\n        applyStylesFromAttr$\n      )\n        .pipe(takeUntil(this.componentDestroy$))\n        .subscribe();\n    }\n  }\n\n  private init(): void {\n    polyfills.path();\n    this.firstColor = this.color;\n    this.firstSize = this.size;\n    this.firstBorder = this.border;\n    this.firstOpacity = this.opacity;\n  }\n\n  private HoverInElement(item: any, i: number): void {\n    if (\n      item.name === 'href' ||\n      item.name === 'routerlink' ||\n      item.name === 'cursor-active'\n    ) {\n      this.addClass('active');\n    } else if (item.name === 'cursor-color') {\n      this.color = item.value;\n    } else if (item.name === 'cursor-border') {\n      this.border = item.value;\n    } else if (item.name === 'cursor-opacity') {\n      this.opacity = item.value;\n    } else if (item.name === 'cursor-size') {\n      this.size = item.value;\n    } else {\n      this.opacity = 1;\n      this.addClass('active');\n      this.customTxtStyles(this.words[i]);\n    }\n\n    this.setStyles();\n  }\n\n  private addClass(className: string): void {\n    this.ngxCursor.nativeElement.classList.add(className);\n  }\n\n  private removeClass(): void {\n    this.color = this.firstColor;\n    this.border = this.firstBorder;\n    this.size = this.firstSize;\n    this.opacity = this.firstOpacity;\n    this.ngxCursor.nativeElement.classList.remove('active');\n    this.ngxCursorEl.nativeElement.innerHTML = '';\n    this.setStyles();\n  }\n\n  private deplaceCursor(x: number, y: number): void {\n    this.ngxCursor.nativeElement.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n  }\n\n  private setStyles(): void {\n    if (this.wr.nativeWindow) {\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-color',\n        this.color\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-border',\n        this.border\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-opacity',\n        `${this.opacity}`\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-size',\n        this.size\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-zindex',\n        `${this.zindex}`\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-txtcolor',\n        `${this.txtcolor}`\n      );\n    }\n    this.isCursor(this.cursor);\n  }\n\n  private customType(): string[] {\n    return this.selectors.map((selector) => `cursor-${selector}`);\n  }\n\n  private isCursor(iscursor: boolean): void {\n    if (this.wr.nativeWindow) {\n      if (iscursor) {\n        this.wr.nativeWindow.document.body.style.setProperty(\n          '--ngx-cursor',\n          'auto'\n        );\n      } else {\n        this.wr.nativeWindow.document.body.style.setProperty(\n          '--ngx-cursor',\n          'none'\n        );\n      }\n    }\n  }\n\n  private customTxtStyles(word: string): void {\n    if (this.wr.nativeWindow) {\n      if (word) {\n        this.ngxCursorEl.nativeElement.innerHTML = word;\n      }\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor-opacity',\n        `0.9`\n      );\n      this.wr.nativeWindow.document.body.style.setProperty(\n        '--ngx-cursor',\n        'none'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.componentDestroy$.next(false);\n    this.componentDestroy$.complete();\n    this.isCursor(true);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCursorComponent } from './ngx-cursor/ngx-cursor.component';\n\n@NgModule({\n  declarations: [NgxCursorComponent],\n  imports: [],\n  exports: [NgxCursorComponent]\n})\nexport class NgxCursorModule {}\n","/*\n * Public API Surface of ngx-cursor\n */\n\nexport * from './lib/ngx-cursor.module';\nexport * from './lib/ngx-cursor/ngx-cursor.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["polyfills.path","i1.BrowserWindowRef"],"mappings":"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"}}}