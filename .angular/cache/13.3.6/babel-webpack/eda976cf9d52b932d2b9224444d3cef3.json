{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge, combineLatest } from 'rxjs';\nimport { delay, tap, throttleTime, pluck, filter, map, takeUntil } from 'rxjs/operators';\nimport { isPlatformBrowser } from '@angular/common';\nconst _c0 = [\"ngxCursor\"];\nconst _c1 = [\"ngxCursorEl\"];\n\nconst path = () => {\n  if (!('path' in Event.prototype)) {\n    Object.defineProperty(Event.prototype, 'path', {\n      get: function () {\n        let path = [];\n        let currentElem = this.target;\n\n        while (currentElem) {\n          path.push(currentElem);\n          currentElem = currentElem.parentElement;\n        }\n\n        if (path.indexOf(window) === -1 && path.indexOf(document) === -1) {\n          path.push(document);\n        }\n\n        if (path.indexOf(window) === -1) {\n          path.push(window);\n        }\n\n        return path;\n      }\n    });\n  }\n};\n\nclass BrowserWindowRef {\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n\n  get nativeWindow() {\n    if (isPlatformBrowser(this.platformId)) {\n      return this.windowRef();\n    }\n\n    return false;\n  }\n\n  windowRef() {\n    // return the global native browser window object\n    return window;\n  }\n\n}\n\nBrowserWindowRef.ɵfac = function BrowserWindowRef_Factory(t) {\n  return new (t || BrowserWindowRef)(i0.ɵɵinject(PLATFORM_ID));\n};\n\nBrowserWindowRef.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BrowserWindowRef,\n  factory: BrowserWindowRef.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserWindowRef, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass NgxCursorComponent {\n  constructor(wr) {\n    this.wr = wr;\n    this.border = 'none';\n    this.chekNParents = 5;\n    this.color = '#000';\n    this.cursor = true;\n    this.delay = 50;\n    this.opacity = 0.4;\n    this.selectors = [];\n    this.size = '30px';\n    this.txtcolor = '#FFF';\n    this.words = [];\n    this.zindex = 999;\n    this.componentDestroy$ = new Subject();\n    this.cursorType = ['cursor-active', 'cursor-color', 'cursor-opacity', 'cursor-border', 'cursor-size', 'href', 'routerlink'];\n  }\n\n  ngOnChanges() {\n    this.setStyles();\n  }\n\n  ngAfterViewInit() {\n    if (this.wr.nativeWindow) {\n      this.init();\n      const mousemove$ = fromEvent(this.wr.nativeWindow, 'mousemove');\n      const click$ = fromEvent(this.wr.nativeWindow, 'click');\n      const deplaceCursor$ = merge(mousemove$, click$).pipe(delay(this.delay), tap(e => {\n        this.deplaceCursor(e.clientX, e.clientY);\n      }));\n      const getElementsFamilly$ = merge(mousemove$, click$).pipe(throttleTime(100), pluck('path'), filter(familly => familly && familly.length > 0), map(familly => familly.slice(0, this.chekNParents)));\n      const getElementsAttrs$ = getElementsFamilly$.pipe(map(data => data.map(item => {\n        if (item.attributes) {\n          return Object.values(item.attributes).filter(attr => {\n            const isStandard = this.cursorType.indexOf(attr.name) !== -1;\n            const isCustom = this.customType().indexOf(attr.name) !== -1;\n            return isStandard || isCustom;\n          });\n        }\n      })));\n      const applyStylesFromAttr$ = getElementsAttrs$.pipe(tap(_ => this.removeClass()), map(data => data.flat()), filter(arrayAttr => arrayAttr.length > 0), tap(arrayAttr => {\n        arrayAttr.map(item => {\n          if (item) {\n            this.HoverInElement(item, this.customType().indexOf(item.name));\n          }\n        });\n      }));\n      this.merge$ = combineLatest(deplaceCursor$, getElementsAttrs$, applyStylesFromAttr$).pipe(takeUntil(this.componentDestroy$)).subscribe();\n    }\n  }\n\n  init() {\n    path();\n    this.firstColor = this.color;\n    this.firstSize = this.size;\n    this.firstBorder = this.border;\n    this.firstOpacity = this.opacity;\n  }\n\n  HoverInElement(item, i) {\n    if (item.name === 'href' || item.name === 'routerlink' || item.name === 'cursor-active') {\n      this.addClass('active');\n    } else if (item.name === 'cursor-color') {\n      this.color = item.value;\n    } else if (item.name === 'cursor-border') {\n      this.border = item.value;\n    } else if (item.name === 'cursor-opacity') {\n      this.opacity = item.value;\n    } else if (item.name === 'cursor-size') {\n      this.size = item.value;\n    } else {\n      this.opacity = 1;\n      this.addClass('active');\n      this.customTxtStyles(this.words[i]);\n    }\n\n    this.setStyles();\n  }\n\n  addClass(className) {\n    this.ngxCursor.nativeElement.classList.add(className);\n  }\n\n  removeClass() {\n    this.color = this.firstColor;\n    this.border = this.firstBorder;\n    this.size = this.firstSize;\n    this.opacity = this.firstOpacity;\n    this.ngxCursor.nativeElement.classList.remove('active');\n    this.ngxCursorEl.nativeElement.innerHTML = '';\n    this.setStyles();\n  }\n\n  deplaceCursor(x, y) {\n    this.ngxCursor.nativeElement.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n  }\n\n  setStyles() {\n    if (this.wr.nativeWindow) {\n      this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-color', this.color);\n      this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-border', this.border);\n      this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-opacity', `${this.opacity}`);\n      this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-size', this.size);\n      this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-zindex', `${this.zindex}`);\n      this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-txtcolor', `${this.txtcolor}`);\n    }\n\n    this.isCursor(this.cursor);\n  }\n\n  customType() {\n    return this.selectors.map(selector => `cursor-${selector}`);\n  }\n\n  isCursor(iscursor) {\n    if (this.wr.nativeWindow) {\n      if (iscursor) {\n        this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'auto');\n      } else {\n        this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'none');\n      }\n    }\n  }\n\n  customTxtStyles(word) {\n    if (this.wr.nativeWindow) {\n      if (word) {\n        this.ngxCursorEl.nativeElement.innerHTML = word;\n      }\n\n      this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-opacity', `0.9`);\n      this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'none');\n    }\n  }\n\n  ngOnDestroy() {\n    this.componentDestroy$.next(false);\n    this.componentDestroy$.complete();\n    this.isCursor(true);\n  }\n\n}\n\nNgxCursorComponent.ɵfac = function NgxCursorComponent_Factory(t) {\n  return new (t || NgxCursorComponent)(i0.ɵɵdirectiveInject(BrowserWindowRef));\n};\n\nNgxCursorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxCursorComponent,\n  selectors: [[\"ngx-cursor\"]],\n  viewQuery: function NgxCursorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxCursor = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxCursorEl = _t.first);\n    }\n  },\n  inputs: {\n    border: \"border\",\n    chekNParents: \"chekNParents\",\n    color: \"color\",\n    cursor: \"cursor\",\n    delay: \"delay\",\n    opacity: \"opacity\",\n    selectors: \"selectors\",\n    size: \"size\",\n    txtcolor: \"txtcolor\",\n    words: \"words\",\n    zindex: \"zindex\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 0,\n  consts: [[\"id\", \"ngx-cursor\"], [\"ngxCursor\", \"\"], [\"ngxCursorEl\", \"\"]],\n  template: function NgxCursorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵelement(2, \"span\", null, 2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"body[_ngcontent-%COMP%]{--ngx-cursor: auto;--ngx-cursor-color: #000;--ngx-cursor-opacity: .5;--ngx-cursor-size: 30;--ngx-cursor-zindex: 999;--ngx-cursor-txtcolor: #fff;--ngx-cursor-border: none}  *{cursor:var(--ngx-cursor)}#ngx-cursor[_ngcontent-%COMP%]{left:0;pointer-events:none;position:fixed;top:0;z-index:var(--ngx-cursor-zindex)}#ngx-cursor[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{align-items:center;background-color:var(--ngx-cursor-color);border-radius:100%;border:var(--ngx-cursor-border);color:var(--ngx-cursor-txtcolor);display:flex;font-size:8px;font-weight:700;height:var(--ngx-cursor-size);justify-content:center;left:calc(var(--ngx-cursor-size) / -2);opacity:var(--ngx-cursor-opacity);position:absolute;text-align:center;top:calc(var(--ngx-cursor-size) / -2);transition:all .25s cubic-bezier(.72,.19,.28,.94);width:var(--ngx-cursor-size)}#ngx-cursor.active[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{transform:scale(2)}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxCursorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-cursor',\n      template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `,\n      styles: [\"body{--ngx-cursor: auto;--ngx-cursor-color: #000;--ngx-cursor-opacity: .5;--ngx-cursor-size: 30;--ngx-cursor-zindex: 999;--ngx-cursor-txtcolor: #fff;--ngx-cursor-border: none}::ng-deep *{cursor:var(--ngx-cursor)}#ngx-cursor{left:0;pointer-events:none;position:fixed;top:0;z-index:var(--ngx-cursor-zindex)}#ngx-cursor span{align-items:center;background-color:var(--ngx-cursor-color);border-radius:100%;border:var(--ngx-cursor-border);color:var(--ngx-cursor-txtcolor);display:flex;font-size:8px;font-weight:700;height:var(--ngx-cursor-size);justify-content:center;left:calc(var(--ngx-cursor-size) / -2);opacity:var(--ngx-cursor-opacity);position:absolute;text-align:center;top:calc(var(--ngx-cursor-size) / -2);transition:all .25s cubic-bezier(.72,.19,.28,.94);width:var(--ngx-cursor-size)}#ngx-cursor.active span{transform:scale(2)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: BrowserWindowRef\n    }];\n  }, {\n    border: [{\n      type: Input\n    }],\n    chekNParents: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    cursor: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    selectors: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    txtcolor: [{\n      type: Input\n    }],\n    words: [{\n      type: Input\n    }],\n    zindex: [{\n      type: Input\n    }],\n    ngxCursor: [{\n      type: ViewChild,\n      args: ['ngxCursor']\n    }],\n    ngxCursorEl: [{\n      type: ViewChild,\n      args: ['ngxCursorEl']\n    }]\n  });\n})();\n\nclass NgxCursorModule {}\n\nNgxCursorModule.ɵfac = function NgxCursorModule_Factory(t) {\n  return new (t || NgxCursorModule)();\n};\n\nNgxCursorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxCursorModule\n});\nNgxCursorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxCursorModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxCursorComponent],\n      imports: [],\n      exports: [NgxCursorComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-cursor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgxCursorComponent, NgxCursorModule };","map":{"version":3,"sources":["/Applications/MAMP/htdocs/npm/npm-directives/dist/ngx-cursor/fesm2015/ngx-cursor.mjs"],"names":["i0","PLATFORM_ID","Injectable","Inject","Component","Input","ViewChild","NgModule","Subject","fromEvent","merge","combineLatest","delay","tap","throttleTime","pluck","filter","map","takeUntil","isPlatformBrowser","path","Event","prototype","Object","defineProperty","get","currentElem","target","push","parentElement","indexOf","window","document","BrowserWindowRef","constructor","platformId","nativeWindow","windowRef","ɵfac","ɵprov","type","args","providedIn","undefined","decorators","NgxCursorComponent","wr","border","chekNParents","color","cursor","opacity","selectors","size","txtcolor","words","zindex","componentDestroy$","cursorType","ngOnChanges","setStyles","ngAfterViewInit","init","mousemove$","click$","deplaceCursor$","pipe","e","deplaceCursor","clientX","clientY","getElementsFamilly$","familly","length","slice","getElementsAttrs$","data","item","attributes","values","attr","isStandard","name","isCustom","customType","applyStylesFromAttr$","_","removeClass","flat","arrayAttr","HoverInElement","merge$","subscribe","firstColor","firstSize","firstBorder","firstOpacity","i","addClass","value","customTxtStyles","className","ngxCursor","nativeElement","classList","add","remove","ngxCursorEl","innerHTML","x","y","style","transform","body","setProperty","isCursor","selector","iscursor","word","ngOnDestroy","next","complete","ɵcmp","template","styles","NgxCursorModule","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge, combineLatest } from 'rxjs';\nimport { delay, tap, throttleTime, pluck, filter, map, takeUntil } from 'rxjs/operators';\nimport { isPlatformBrowser } from '@angular/common';\n\nconst path = () => {\n    if (!('path' in Event.prototype)) {\n        Object.defineProperty(Event.prototype, 'path', {\n            get: function () {\n                let path = [];\n                let currentElem = this.target;\n                while (currentElem) {\n                    path.push(currentElem);\n                    currentElem = currentElem.parentElement;\n                }\n                if (path.indexOf(window) === -1 && path.indexOf(document) === -1) {\n                    path.push(document);\n                }\n                if (path.indexOf(window) === -1) {\n                    path.push(window);\n                }\n                return path;\n            }\n        });\n    }\n};\n\nclass BrowserWindowRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    get nativeWindow() {\n        if (isPlatformBrowser(this.platformId)) {\n            return this.windowRef();\n        }\n        return false;\n    }\n    windowRef() {\n        // return the global native browser window object\n        return window;\n    }\n}\nBrowserWindowRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserWindowRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: BrowserWindowRef, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    } });\n\nclass NgxCursorComponent {\n    constructor(wr) {\n        this.wr = wr;\n        this.border = 'none';\n        this.chekNParents = 5;\n        this.color = '#000';\n        this.cursor = true;\n        this.delay = 50;\n        this.opacity = 0.4;\n        this.selectors = [];\n        this.size = '30px';\n        this.txtcolor = '#FFF';\n        this.words = [];\n        this.zindex = 999;\n        this.componentDestroy$ = new Subject();\n        this.cursorType = [\n            'cursor-active',\n            'cursor-color',\n            'cursor-opacity',\n            'cursor-border',\n            'cursor-size',\n            'href',\n            'routerlink'\n        ];\n    }\n    ngOnChanges() {\n        this.setStyles();\n    }\n    ngAfterViewInit() {\n        if (this.wr.nativeWindow) {\n            this.init();\n            const mousemove$ = fromEvent(this.wr.nativeWindow, 'mousemove');\n            const click$ = fromEvent(this.wr.nativeWindow, 'click');\n            const deplaceCursor$ = merge(mousemove$, click$).pipe(delay(this.delay), tap((e) => {\n                this.deplaceCursor(e.clientX, e.clientY);\n            }));\n            const getElementsFamilly$ = merge(mousemove$, click$).pipe(throttleTime(100), pluck('path'), filter((familly) => familly && familly.length > 0), map((familly) => familly.slice(0, this.chekNParents)));\n            const getElementsAttrs$ = getElementsFamilly$.pipe(map((data) => data.map((item) => {\n                if (item.attributes) {\n                    return Object.values(item.attributes).filter((attr) => {\n                        const isStandard = this.cursorType.indexOf(attr.name) !== -1;\n                        const isCustom = this.customType().indexOf(attr.name) !== -1;\n                        return isStandard || isCustom;\n                    });\n                }\n            })));\n            const applyStylesFromAttr$ = getElementsAttrs$.pipe(tap((_) => this.removeClass()), map((data) => data.flat()), filter((arrayAttr) => arrayAttr.length > 0), tap((arrayAttr) => {\n                arrayAttr.map((item) => {\n                    if (item) {\n                        this.HoverInElement(item, this.customType().indexOf(item.name));\n                    }\n                });\n            }));\n            this.merge$ = combineLatest(deplaceCursor$, getElementsAttrs$, applyStylesFromAttr$)\n                .pipe(takeUntil(this.componentDestroy$))\n                .subscribe();\n        }\n    }\n    init() {\n        path();\n        this.firstColor = this.color;\n        this.firstSize = this.size;\n        this.firstBorder = this.border;\n        this.firstOpacity = this.opacity;\n    }\n    HoverInElement(item, i) {\n        if (item.name === 'href' ||\n            item.name === 'routerlink' ||\n            item.name === 'cursor-active') {\n            this.addClass('active');\n        }\n        else if (item.name === 'cursor-color') {\n            this.color = item.value;\n        }\n        else if (item.name === 'cursor-border') {\n            this.border = item.value;\n        }\n        else if (item.name === 'cursor-opacity') {\n            this.opacity = item.value;\n        }\n        else if (item.name === 'cursor-size') {\n            this.size = item.value;\n        }\n        else {\n            this.opacity = 1;\n            this.addClass('active');\n            this.customTxtStyles(this.words[i]);\n        }\n        this.setStyles();\n    }\n    addClass(className) {\n        this.ngxCursor.nativeElement.classList.add(className);\n    }\n    removeClass() {\n        this.color = this.firstColor;\n        this.border = this.firstBorder;\n        this.size = this.firstSize;\n        this.opacity = this.firstOpacity;\n        this.ngxCursor.nativeElement.classList.remove('active');\n        this.ngxCursorEl.nativeElement.innerHTML = '';\n        this.setStyles();\n    }\n    deplaceCursor(x, y) {\n        this.ngxCursor.nativeElement.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n    }\n    setStyles() {\n        if (this.wr.nativeWindow) {\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-color', this.color);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-border', this.border);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-opacity', `${this.opacity}`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-size', this.size);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-zindex', `${this.zindex}`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-txtcolor', `${this.txtcolor}`);\n        }\n        this.isCursor(this.cursor);\n    }\n    customType() {\n        return this.selectors.map((selector) => `cursor-${selector}`);\n    }\n    isCursor(iscursor) {\n        if (this.wr.nativeWindow) {\n            if (iscursor) {\n                this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'auto');\n            }\n            else {\n                this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'none');\n            }\n        }\n    }\n    customTxtStyles(word) {\n        if (this.wr.nativeWindow) {\n            if (word) {\n                this.ngxCursorEl.nativeElement.innerHTML = word;\n            }\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor-opacity', `0.9`);\n            this.wr.nativeWindow.document.body.style.setProperty('--ngx-cursor', 'none');\n        }\n    }\n    ngOnDestroy() {\n        this.componentDestroy$.next(false);\n        this.componentDestroy$.complete();\n        this.isCursor(true);\n    }\n}\nNgxCursorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorComponent, deps: [{ token: BrowserWindowRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxCursorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.9\", type: NgxCursorComponent, selector: \"ngx-cursor\", inputs: { border: \"border\", chekNParents: \"chekNParents\", color: \"color\", cursor: \"cursor\", delay: \"delay\", opacity: \"opacity\", selectors: \"selectors\", size: \"size\", txtcolor: \"txtcolor\", words: \"words\", zindex: \"zindex\" }, viewQueries: [{ propertyName: \"ngxCursor\", first: true, predicate: [\"ngxCursor\"], descendants: true }, { propertyName: \"ngxCursorEl\", first: true, predicate: [\"ngxCursorEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `, isInline: true, styles: [\"body{--ngx-cursor: auto;--ngx-cursor-color: #000;--ngx-cursor-opacity: .5;--ngx-cursor-size: 30;--ngx-cursor-zindex: 999;--ngx-cursor-txtcolor: #fff;--ngx-cursor-border: none}::ng-deep *{cursor:var(--ngx-cursor)}#ngx-cursor{left:0;pointer-events:none;position:fixed;top:0;z-index:var(--ngx-cursor-zindex)}#ngx-cursor span{align-items:center;background-color:var(--ngx-cursor-color);border-radius:100%;border:var(--ngx-cursor-border);color:var(--ngx-cursor-txtcolor);display:flex;font-size:8px;font-weight:700;height:var(--ngx-cursor-size);justify-content:center;left:calc(var(--ngx-cursor-size) / -2);opacity:var(--ngx-cursor-opacity);position:absolute;text-align:center;top:calc(var(--ngx-cursor-size) / -2);transition:all .25s cubic-bezier(.72,.19,.28,.94);width:var(--ngx-cursor-size)}#ngx-cursor.active span{transform:scale(2)}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-cursor', template: `\n    <div id=\"ngx-cursor\" #ngxCursor>\n      <span #ngxCursorEl></span>\n    </div>\n  `, styles: [\"body{--ngx-cursor: auto;--ngx-cursor-color: #000;--ngx-cursor-opacity: .5;--ngx-cursor-size: 30;--ngx-cursor-zindex: 999;--ngx-cursor-txtcolor: #fff;--ngx-cursor-border: none}::ng-deep *{cursor:var(--ngx-cursor)}#ngx-cursor{left:0;pointer-events:none;position:fixed;top:0;z-index:var(--ngx-cursor-zindex)}#ngx-cursor span{align-items:center;background-color:var(--ngx-cursor-color);border-radius:100%;border:var(--ngx-cursor-border);color:var(--ngx-cursor-txtcolor);display:flex;font-size:8px;font-weight:700;height:var(--ngx-cursor-size);justify-content:center;left:calc(var(--ngx-cursor-size) / -2);opacity:var(--ngx-cursor-opacity);position:absolute;text-align:center;top:calc(var(--ngx-cursor-size) / -2);transition:all .25s cubic-bezier(.72,.19,.28,.94);width:var(--ngx-cursor-size)}#ngx-cursor.active span{transform:scale(2)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: BrowserWindowRef }]; }, propDecorators: { border: [{\n                type: Input\n            }], chekNParents: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], cursor: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], selectors: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], txtcolor: [{\n                type: Input\n            }], words: [{\n                type: Input\n            }], zindex: [{\n                type: Input\n            }], ngxCursor: [{\n                type: ViewChild,\n                args: ['ngxCursor']\n            }], ngxCursorEl: [{\n                type: ViewChild,\n                args: ['ngxCursorEl']\n            }] } });\n\nclass NgxCursorModule {\n}\nNgxCursorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxCursorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, declarations: [NgxCursorComponent], exports: [NgxCursorComponent] });\nNgxCursorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxCursorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxCursorComponent],\n                    imports: [],\n                    exports: [NgxCursorComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-cursor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxCursorComponent, NgxCursorModule };\n"]},"metadata":{},"sourceType":"module"}